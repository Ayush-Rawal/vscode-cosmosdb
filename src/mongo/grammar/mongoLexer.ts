// Generated from ./grammar/mongo.g4 by ANTLR 4.6-SNAPSHOT


/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

 /*tslint:disable */


import { ATN } from 'antlr4ts/atn/ATN';
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer';
import { CharStream } from 'antlr4ts/CharStream';
import { Lexer } from 'antlr4ts/Lexer';
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator';
import { NotNull } from 'antlr4ts/Decorators';
import { Override } from 'antlr4ts/Decorators';
import { RuleContext } from 'antlr4ts/RuleContext';
import { Vocabulary } from 'antlr4ts/Vocabulary';
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl';

import * as Utils from 'antlr4ts/misc/Utils';


export class mongoLexer extends Lexer {
	public static readonly T__0=1;
	public static readonly T__1=2;
	public static readonly T__2=3;
	public static readonly T__3=4;
	public static readonly T__4=5;
	public static readonly T__5=6;
	public static readonly T__6=7;
	public static readonly T__7=8;
	public static readonly SingleLineComment=9;
	public static readonly MultiLineComment=10;
	public static readonly StringLiteral=11;
	public static readonly NullLiteral=12;
	public static readonly BooleanLiteral=13;
	public static readonly NumericLiteral=14;
	public static readonly DecimalLiteral=15;
	public static readonly ObjectIdLiteral=16;
	public static readonly LineTerminator=17;
	public static readonly SEMICOLON=18;
	public static readonly DOT=19;
	public static readonly DB=20;
	public static readonly IDENTIFIER=21;
	public static readonly DOUBLE_QUOTED_STRING_LITERAL=22;
	public static readonly SINGLE_QUOTED_STRING_LITERAL=23;
	public static readonly WHITESPACE=24;
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE"
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "SingleLineComment", 
		"MultiLineComment", "StringLiteral", "NullLiteral", "BooleanLiteral", 
		"NumericLiteral", "DecimalLiteral", "ObjectIdLiteral", "LineTerminator", 
		"SEMICOLON", "DOT", "DB", "IDENTIFIER", "DOUBLE_QUOTED_STRING_LITERAL", 
		"SINGLE_QUOTED_STRING_LITERAL", "STRING_ESCAPE", "DecimalIntegerLiteral", 
		"ExponentPart", "DecimalDigit", "WHITESPACE"
	];

	private static readonly _LITERAL_NAMES: (string | undefined)[] = [
		undefined, "'('", "','", "')'", "'{'", "'}'", "'['", "']'", "':'", undefined, 
		undefined, undefined, "'null'", undefined, undefined, undefined, undefined, 
		undefined, "';'", "'.'", "'db'"
	];
	private static readonly _SYMBOLIC_NAMES: (string | undefined)[] = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, "SingleLineComment", "MultiLineComment", "StringLiteral", 
		"NullLiteral", "BooleanLiteral", "NumericLiteral", "DecimalLiteral", "ObjectIdLiteral", 
		"LineTerminator", "SEMICOLON", "DOT", "DB", "IDENTIFIER", "DOUBLE_QUOTED_STRING_LITERAL", 
		"SINGLE_QUOTED_STRING_LITERAL", "WHITESPACE"
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(mongoLexer._LITERAL_NAMES, mongoLexer._SYMBOLIC_NAMES, []);

	@Override
	@NotNull
	public get vocabulary(): Vocabulary {
		return mongoLexer.VOCABULARY;
	}


		private isExternalIdentifierText(text) {
			return text === 'db';
		}


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(mongoLexer._ATN, this);
	}

	@Override
	public get grammarFileName(): string { return "mongo.g4"; }

	@Override
	public get ruleNames(): string[] { return mongoLexer.ruleNames; }

	@Override
	public get serializedATN(): string { return mongoLexer._serializedATN; }

	@Override
	public get modeNames(): string[] { return mongoLexer.modeNames; }

	@Override
	public sempred(_localctx: RuleContext, ruleIndex: number, predIndex: number): boolean {
		switch (ruleIndex) {
		case 20:
			return this.IDENTIFIER_sempred(_localctx, predIndex);
		}
		return true;
	}
	private IDENTIFIER_sempred(_localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
		case 0:
			return !this.isExternalIdentifierText(this.text)
				;
		}
		return true;
	}

	public static readonly _serializedATN: string =
		"\x03\uAF6F\u8320\u479D\uB75C\u4880\u1605\u191C\uAB37\x02\x1A\xEF\b\x01"+
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06"+
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r"+
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t"+
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t"+
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t"+
		"\x1C\x04\x1D\t\x1D\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03"+
		"\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03"+
		"\n\x03\n\x03\n\x03\n\x07\nP\n\n\f\n\x0E\nS\v\n\x03\n\x03\n\x03\v\x03\v"+
		"\x03\v\x03\v\x07\v[\n\v\f\v\x0E\v^\v\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03"+
		"\f\x03\f\x05\fg\n\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03"+
		"\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x05\x0Ew\n\x0E\x03"+
		"\x0F\x05\x0Fz\n\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x06\x10\x81"+
		"\n\x10\r\x10\x0E\x10\x82\x03\x10\x05\x10\x86\n\x10\x03\x10\x03\x10\x06"+
		"\x10\x8A\n\x10\r\x10\x0E\x10\x8B\x03\x10\x05\x10\x8F\n\x10\x03\x10\x03"+
		"\x10\x05\x10\x93\n\x10\x05\x10\x95\n\x10\x03\x11\x03\x11\x03\x11\x03\x11"+
		"\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x07\x11"+
		"\xA3\n\x11\f\x11\x0E\x11\xA6\v\x11\x03\x11\x05\x11\xA9\n\x11\x03\x11\x03"+
		"\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03"+
		"\x15\x03\x15\x03\x15\x03\x16\x03\x16\x06\x16\xBA\n\x16\r\x16\x0E\x16\xBB"+
		"\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x07\x17\xC3\n\x17\f\x17\x0E\x17"+
		"\xC6\v\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x07\x18\xCD\n\x18\f"+
		"\x18\x0E\x18\xD0\v\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x1A"+
		"\x03\x1A\x03\x1A\x07\x1A\xDA\n\x1A\f\x1A\x0E\x1A\xDD\v\x1A\x05\x1A\xDF"+
		"\n\x1A\x03\x1B\x03\x1B\x05\x1B\xE3\n\x1B\x03\x1B\x06\x1B\xE6\n\x1B\r\x1B"+
		"\x0E\x1B\xE7\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\\\x02"+
		"\x02\x1E\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02"+
		"\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02"+
		"\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02"+
		"\x16+\x02\x17-\x02\x18/\x02\x191\x02\x023\x02\x025\x02\x027\x02\x029\x02"+
		"\x1A\x03\x02\r\x05\x02\f\f\x0F\x0F\u202A\u202B\x05\x022;CHch\f\x02\v\f"+
		"\x0F\x0F\"\"$$)+.0<=]_}}\x7F\x7F\x04\x02$$^^\x04\x02))^^\x05\x02$$))^"+
		"^\x03\x023;\x04\x02GGgg\x04\x02--//\x03\x022;\x04\x02\v\v\"\"\u0102\x02"+
		"\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02"+
		"\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F"+
		"\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15"+
		"\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B"+
		"\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!"+
		"\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02"+
		"\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02"+
		"\x02/\x03\x02\x02\x02\x029\x03\x02\x02\x02\x03;\x03\x02\x02\x02\x05=\x03"+
		"\x02\x02\x02\x07?\x03\x02\x02\x02\tA\x03\x02\x02\x02\vC\x03\x02\x02\x02"+
		"\rE\x03\x02\x02\x02\x0FG\x03\x02\x02\x02\x11I\x03\x02\x02\x02\x13K\x03"+
		"\x02\x02\x02\x15V\x03\x02\x02\x02\x17f\x03\x02\x02\x02\x19h\x03\x02\x02"+
		"\x02\x1Bv\x03\x02\x02\x02\x1Dy\x03\x02\x02\x02\x1F\x94\x03\x02\x02\x02"+
		"!\x96\x03\x02\x02\x02#\xAC\x03\x02\x02\x02%\xB0\x03\x02\x02\x02\'\xB2"+
		"\x03\x02\x02\x02)\xB4\x03\x02\x02\x02+\xB9\x03\x02\x02\x02-\xBF\x03\x02"+
		"\x02\x02/\xC9\x03\x02\x02\x021\xD3\x03\x02\x02\x023\xDE\x03\x02\x02\x02"+
		"5\xE0\x03\x02\x02\x027\xE9\x03\x02\x02\x029\xEB\x03\x02\x02\x02;<\x07"+
		"*\x02\x02<\x04\x03\x02\x02\x02=>\x07.\x02\x02>\x06\x03\x02\x02\x02?@\x07"+
		"+\x02\x02@\b\x03\x02\x02\x02AB\x07}\x02\x02B\n\x03\x02\x02\x02CD\x07\x7F"+
		"\x02\x02D\f\x03\x02\x02\x02EF\x07]\x02\x02F\x0E\x03\x02\x02\x02GH\x07"+
		"_\x02\x02H\x10\x03\x02\x02\x02IJ\x07<\x02\x02J\x12\x03\x02\x02\x02KL\x07"+
		"1\x02\x02LM\x071\x02\x02MQ\x03\x02\x02\x02NP\n\x02\x02\x02ON\x03\x02\x02"+
		"\x02PS\x03\x02\x02\x02QO\x03\x02\x02\x02QR\x03\x02\x02\x02RT\x03\x02\x02"+
		"\x02SQ\x03\x02\x02\x02TU\b\n\x02\x02U\x14\x03\x02\x02\x02VW\x071\x02\x02"+
		"WX\x07,\x02\x02X\\\x03\x02\x02\x02Y[\v\x02\x02\x02ZY\x03\x02\x02\x02["+
		"^\x03\x02\x02\x02\\]\x03\x02\x02\x02\\Z\x03\x02\x02\x02]_\x03\x02\x02"+
		"\x02^\\\x03\x02\x02\x02_`\x07,\x02\x02`a\x071\x02\x02ab\x03\x02\x02\x02"+
		"bc\b\v\x02\x02c\x16\x03\x02\x02\x02dg\x05/\x18\x02eg\x05-\x17\x02fd\x03"+
		"\x02\x02\x02fe\x03\x02\x02\x02g\x18\x03\x02\x02\x02hi\x07p\x02\x02ij\x07"+
		"w\x02\x02jk\x07n\x02\x02kl\x07n\x02\x02l\x1A\x03\x02\x02\x02mn\x07v\x02"+
		"\x02no\x07t\x02\x02op\x07w\x02\x02pw\x07g\x02\x02qr\x07h\x02\x02rs\x07"+
		"c\x02\x02st\x07n\x02\x02tu\x07u\x02\x02uw\x07g\x02\x02vm\x03\x02\x02\x02"+
		"vq\x03\x02\x02\x02w\x1C\x03\x02\x02\x02xz\x07/\x02\x02yx\x03\x02\x02\x02"+
		"yz\x03\x02\x02\x02z{\x03\x02\x02\x02{|\x05\x1F\x10\x02|\x1E\x03\x02\x02"+
		"\x02}~\x053\x1A\x02~\x80\x070\x02\x02\x7F\x81\x057\x1C\x02\x80\x7F\x03"+
		"\x02\x02\x02\x81\x82\x03\x02\x02\x02\x82\x80\x03\x02\x02\x02\x82\x83\x03"+
		"\x02\x02\x02\x83\x85\x03\x02\x02\x02\x84\x86\x055\x1B\x02\x85\x84\x03"+
		"\x02\x02\x02\x85\x86\x03\x02\x02\x02\x86\x95\x03\x02\x02\x02\x87\x89\x07"+
		"0\x02\x02\x88\x8A\x057\x1C\x02\x89\x88\x03\x02\x02\x02\x8A\x8B\x03\x02"+
		"\x02\x02\x8B\x89\x03\x02\x02\x02\x8B\x8C\x03\x02\x02\x02\x8C\x8E\x03\x02"+
		"\x02\x02\x8D\x8F\x055\x1B\x02\x8E\x8D\x03\x02\x02\x02\x8E\x8F\x03\x02"+
		"\x02\x02\x8F\x95\x03\x02\x02\x02\x90\x92\x053\x1A\x02\x91\x93\x055\x1B"+
		"\x02\x92\x91\x03\x02\x02\x02\x92\x93\x03\x02\x02\x02\x93\x95\x03\x02\x02"+
		"\x02\x94}\x03\x02\x02\x02\x94\x87\x03\x02\x02\x02\x94\x90\x03\x02\x02"+
		"\x02\x95 \x03\x02\x02\x02\x96\x97\x07Q\x02\x02\x97\x98\x07d\x02\x02\x98"+
		"\x99\x07l\x02\x02\x99\x9A\x07g\x02\x02\x9A\x9B\x07e\x02\x02\x9B\x9C\x07"+
		"v\x02\x02\x9C\x9D\x07K\x02\x02\x9D\x9E\x07f\x02\x02\x9E\x9F\x07*\x02\x02"+
		"\x9F\xA8\x03\x02\x02\x02\xA0\xA4\x07$\x02\x02\xA1\xA3\t\x03\x02\x02\xA2"+
		"\xA1\x03\x02\x02\x02\xA3\xA6\x03\x02\x02\x02\xA4\xA2\x03\x02\x02\x02\xA4"+
		"\xA5\x03\x02\x02\x02\xA5\xA7\x03\x02\x02\x02\xA6\xA4\x03\x02\x02\x02\xA7"+
		"\xA9\x07$\x02\x02\xA8\xA0\x03\x02\x02\x02\xA8\xA9\x03\x02\x02\x02\xA9"+
		"\xAA\x03\x02\x02\x02\xAA\xAB\x07+\x02\x02\xAB\"\x03\x02\x02\x02\xAC\xAD"+
		"\t\x02\x02\x02\xAD\xAE\x03\x02\x02\x02\xAE\xAF\b\x12\x02\x02\xAF$\x03"+
		"\x02\x02\x02\xB0\xB1\x07=\x02\x02\xB1&\x03\x02\x02\x02\xB2\xB3\x070\x02"+
		"\x02\xB3(\x03\x02\x02\x02\xB4\xB5\x07f\x02\x02\xB5\xB6\x07d\x02\x02\xB6"+
		"*\x03\x02\x02\x02\xB7\xBA\n\x04\x02\x02\xB8\xBA\x051\x19\x02\xB9\xB7\x03"+
		"\x02\x02\x02\xB9\xB8\x03\x02\x02\x02\xBA\xBB\x03\x02\x02\x02\xBB\xB9\x03"+
		"\x02\x02\x02\xBB\xBC\x03\x02\x02\x02\xBC\xBD\x03\x02\x02\x02\xBD\xBE\x06"+
		"\x16\x02\x02\xBE,\x03\x02\x02\x02\xBF\xC4\x07$\x02\x02\xC0\xC3\n\x05\x02"+
		"\x02\xC1\xC3\x051\x19\x02\xC2\xC0\x03\x02\x02\x02\xC2\xC1\x03\x02\x02"+
		"\x02\xC3\xC6\x03\x02\x02\x02\xC4\xC2\x03\x02\x02\x02\xC4\xC5\x03\x02\x02"+
		"\x02\xC5\xC7\x03\x02\x02\x02\xC6\xC4\x03\x02\x02\x02\xC7\xC8\x07$\x02"+
		"\x02\xC8.\x03\x02\x02\x02\xC9\xCE\x07)\x02\x02\xCA\xCD\n\x06\x02\x02\xCB"+
		"\xCD\x051\x19\x02\xCC\xCA\x03\x02\x02\x02\xCC\xCB\x03\x02\x02\x02\xCD"+
		"\xD0\x03\x02\x02\x02\xCE\xCC\x03\x02\x02\x02\xCE\xCF\x03\x02\x02\x02\xCF"+
		"\xD1\x03\x02\x02\x02\xD0\xCE\x03\x02\x02\x02\xD1\xD2\x07)\x02\x02\xD2"+
		"0\x03\x02\x02\x02\xD3\xD4\x07^\x02\x02\xD4\xD5\t\x07\x02\x02\xD52\x03"+
		"\x02\x02\x02\xD6\xDF\x072\x02\x02\xD7\xDB\t\b\x02\x02\xD8\xDA\x057\x1C"+
		"\x02\xD9\xD8\x03\x02\x02\x02\xDA\xDD\x03\x02\x02\x02\xDB\xD9\x03\x02\x02"+
		"\x02\xDB\xDC\x03\x02\x02\x02\xDC\xDF\x03\x02\x02\x02\xDD\xDB\x03\x02\x02"+
		"\x02\xDE\xD6\x03\x02\x02\x02\xDE\xD7\x03\x02\x02\x02\xDF4\x03\x02\x02"+
		"\x02\xE0\xE2\t\t\x02\x02\xE1\xE3\t\n\x02\x02\xE2\xE1\x03\x02\x02\x02\xE2"+
		"\xE3\x03\x02\x02\x02\xE3\xE5\x03\x02\x02\x02\xE4\xE6\x057\x1C\x02\xE5"+
		"\xE4\x03\x02\x02\x02\xE6\xE7\x03\x02\x02\x02\xE7\xE5\x03\x02\x02\x02\xE7"+
		"\xE8\x03\x02\x02\x02\xE86\x03\x02\x02\x02\xE9\xEA\t\v\x02\x02\xEA8\x03"+
		"\x02\x02\x02\xEB\xEC\t\f\x02\x02\xEC\xED\x03\x02\x02\x02\xED\xEE\b\x1D"+
		"\x03\x02\xEE:\x03\x02\x02\x02\x1A\x02Q\\fvy\x82\x85\x8B\x8E\x92\x94\xA4"+
		"\xA8\xB9\xBB\xC2\xC4\xCC\xCE\xDB\xDE\xE2\xE7\x04\x02\x03\x02\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!mongoLexer.__ATN) {
			mongoLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(mongoLexer._serializedATN));
		}

		return mongoLexer.__ATN;
	}

}

