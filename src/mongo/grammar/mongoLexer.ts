// Generated from ./grammar/mongo.g4 by ANTLR 4.6-SNAPSHOT


/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

 /*tslint:disable */


import { ATN } from 'antlr4ts/atn/ATN';
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer';
import { CharStream } from 'antlr4ts/CharStream';
import { Lexer } from 'antlr4ts/Lexer';
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator';
import { NotNull } from 'antlr4ts/Decorators';
import { Override } from 'antlr4ts/Decorators';
import { RuleContext } from 'antlr4ts/RuleContext';
import { Vocabulary } from 'antlr4ts/Vocabulary';
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl';

import * as Utils from 'antlr4ts/misc/Utils';


export class mongoLexer extends Lexer {
	public static readonly T__0=1;
	public static readonly T__1=2;
	public static readonly T__2=3;
	public static readonly T__3=4;
	public static readonly T__4=5;
	public static readonly T__5=6;
	public static readonly T__6=7;
	public static readonly T__7=8;
	public static readonly RegexLiteral=9;
	public static readonly RegexPattern=10;
	public static readonly SingleLineComment=11;
	public static readonly MultiLineComment=12;
	public static readonly StringLiteral=13;
	public static readonly NullLiteral=14;
	public static readonly BooleanLiteral=15;
	public static readonly NumericLiteral=16;
	public static readonly RegexFlag=17;
	public static readonly DecimalLiteral=18;
	public static readonly LineTerminator=19;
	public static readonly SEMICOLON=20;
	public static readonly DOT=21;
	public static readonly DB=22;
	public static readonly IDENTIFIER=23;
	public static readonly DOUBLE_QUOTED_STRING_LITERAL=24;
	public static readonly SINGLE_QUOTED_STRING_LITERAL=25;
	public static readonly WHITESPACE=26;
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE"
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "RegexLiteral", 
		"RegexPattern", "SingleLineComment", "MultiLineComment", "StringLiteral", 
		"NullLiteral", "BooleanLiteral", "NumericLiteral", "RegexFlag", "DecimalLiteral", 
		"LineTerminator", "SEMICOLON", "DOT", "DB", "IDENTIFIER", "DOUBLE_QUOTED_STRING_LITERAL", 
		"SINGLE_QUOTED_STRING_LITERAL", "STRING_ESCAPE", "DecimalIntegerLiteral", 
		"ExponentPart", "DecimalDigit", "WHITESPACE"
	];

	private static readonly _LITERAL_NAMES: (string | undefined)[] = [
		undefined, "'('", "','", "')'", "'{'", "'}'", "'['", "']'", "':'", undefined, 
		undefined, undefined, undefined, undefined, "'null'", undefined, undefined, 
		undefined, undefined, undefined, "';'", "'.'", "'db'"
	];
	private static readonly _SYMBOLIC_NAMES: (string | undefined)[] = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, "RegexLiteral", "RegexPattern", "SingleLineComment", 
		"MultiLineComment", "StringLiteral", "NullLiteral", "BooleanLiteral", 
		"NumericLiteral", "RegexFlag", "DecimalLiteral", "LineTerminator", "SEMICOLON", 
		"DOT", "DB", "IDENTIFIER", "DOUBLE_QUOTED_STRING_LITERAL", "SINGLE_QUOTED_STRING_LITERAL", 
		"WHITESPACE"
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(mongoLexer._LITERAL_NAMES, mongoLexer._SYMBOLIC_NAMES, []);

	@Override
	@NotNull
	public get vocabulary(): Vocabulary {
		return mongoLexer.VOCABULARY;
	}


		private isExternalIdentifierText(text) {
			return text === 'db';
		}


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(mongoLexer._ATN, this);
	}

	@Override
	public get grammarFileName(): string { return "mongo.g4"; }

	@Override
	public get ruleNames(): string[] { return mongoLexer.ruleNames; }

	@Override
	public get serializedATN(): string { return mongoLexer._serializedATN; }

	@Override
	public get modeNames(): string[] { return mongoLexer.modeNames; }

	@Override
	public sempred(_localctx: RuleContext, ruleIndex: number, predIndex: number): boolean {
		switch (ruleIndex) {
		case 22:
			return this.IDENTIFIER_sempred(_localctx, predIndex);
		}
		return true;
	}
	private IDENTIFIER_sempred(_localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
		case 0:
			return !this.isExternalIdentifierText(this.text)
				;
		}
		return true;
	}

	public static readonly _serializedATN: string =
		"\x03\uAF6F\u8320\u479D\uB75C\u4880\u1605\u191C\uAB37\x02\x1C\xEF\b\x01"+
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06"+
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r"+
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t"+
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t"+
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t"+
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x03\x02\x03\x02\x03\x03"+
		"\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07"+
		"\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x07\nT\n\n\f\n\x0E\n"+
		"W\v\n\x03\v\x03\v\x03\v\x06\v\\\n\v\r\v\x0E\v]\x03\f\x03\f\x03\f\x03\f"+
		"\x07\fd\n\f\f\f\x0E\fg\v\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x07\ro"+
		"\n\r\f\r\x0E\rr\v\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x05"+
		"\x0E{\n\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03"+
		"\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x05\x10\x8B\n\x10"+
		"\x03\x11\x05\x11\x8E\n\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03"+
		"\x13\x03\x13\x06\x13\x97\n\x13\r\x13\x0E\x13\x98\x03\x13\x05\x13\x9C\n"+
		"\x13\x03\x13\x03\x13\x06\x13\xA0\n\x13\r\x13\x0E\x13\xA1\x03\x13\x05\x13"+
		"\xA5\n\x13\x03\x13\x03\x13\x05\x13\xA9\n\x13\x05\x13\xAB\n\x13\x03\x14"+
		"\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17"+
		"\x03\x17\x03\x18\x03\x18\x06\x18\xBA\n\x18\r\x18\x0E\x18\xBB\x03\x18\x03"+
		"\x18\x03\x19\x03\x19\x03\x19\x07\x19\xC3\n\x19\f\x19\x0E\x19\xC6\v\x19"+
		"\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x07\x1A\xCD\n\x1A\f\x1A\x0E\x1A"+
		"\xD0\v\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03"+
		"\x1C\x07\x1C\xDA\n\x1C\f\x1C\x0E\x1C\xDD\v\x1C\x05\x1C\xDF\n\x1C\x03\x1D"+
		"\x03\x1D\x05\x1D\xE3\n\x1D\x03\x1D\x06\x1D\xE6\n\x1D\r\x1D\x0E\x1D\xE7"+
		"\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03p\x02\x02 \x03\x02"+
		"\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11"+
		"\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10"+
		"\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02"+
		"\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x027\x02\x029\x02\x02;\x02\x02=\x02"+
		"\x1C\x03\x02\x0E\x03\x0211\x05\x02\f\f\x0F\x0F\u202A\u202B\x07\x02iik"+
		"kooww{{\f\x02\v\f\x0F\x0F\"\"$$)+.0<=]_}}\x7F\x7F\x04\x02$$^^\x04\x02"+
		"))^^\x05\x02$$))^^\x03\x023;\x04\x02GGgg\x04\x02--//\x03\x022;\x04\x02"+
		"\v\v\"\"\u0103\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07"+
		"\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03"+
		"\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03"+
		"\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03"+
		"\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03"+
		"\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02"+
		"\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02"+
		"-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02"+
		"\x02\x02\x02=\x03\x02\x02\x02\x03?\x03\x02\x02\x02\x05A\x03\x02\x02\x02"+
		"\x07C\x03\x02\x02\x02\tE\x03\x02\x02\x02\vG\x03\x02\x02\x02\rI\x03\x02"+
		"\x02\x02\x0FK\x03\x02\x02\x02\x11M\x03\x02\x02\x02\x13O\x03\x02\x02\x02"+
		"\x15[\x03\x02\x02\x02\x17_\x03\x02\x02\x02\x19j\x03\x02\x02\x02\x1Bz\x03"+
		"\x02\x02\x02\x1D|\x03\x02\x02\x02\x1F\x8A\x03\x02\x02\x02!\x8D\x03\x02"+
		"\x02\x02#\x91\x03\x02\x02\x02%\xAA\x03\x02\x02\x02\'\xAC\x03\x02\x02\x02"+
		")\xB0\x03\x02\x02\x02+\xB2\x03\x02\x02\x02-\xB4\x03\x02\x02\x02/\xB9\x03"+
		"\x02\x02\x021\xBF\x03\x02\x02\x023\xC9\x03\x02\x02\x025\xD3\x03\x02\x02"+
		"\x027\xDE\x03\x02\x02\x029\xE0\x03\x02\x02\x02;\xE9\x03\x02\x02\x02=\xEB"+
		"\x03\x02\x02\x02?@\x07*\x02\x02@\x04\x03\x02\x02\x02AB\x07.\x02\x02B\x06"+
		"\x03\x02\x02\x02CD\x07+\x02\x02D\b\x03\x02\x02\x02EF\x07}\x02\x02F\n\x03"+
		"\x02\x02\x02GH\x07\x7F\x02\x02H\f\x03\x02\x02\x02IJ\x07]\x02\x02J\x0E"+
		"\x03\x02\x02\x02KL\x07_\x02\x02L\x10\x03\x02\x02\x02MN\x07<\x02\x02N\x12"+
		"\x03\x02\x02\x02OP\x071\x02\x02PQ\x05\x15\v\x02QU\x071\x02\x02RT\x05#"+
		"\x12\x02SR\x03\x02\x02\x02TW\x03\x02\x02\x02US\x03\x02\x02\x02UV\x03\x02"+
		"\x02\x02V\x14\x03\x02\x02\x02WU\x03\x02\x02\x02X\\\n\x02\x02\x02YZ\x07"+
		"^\x02\x02Z\\\x071\x02\x02[X\x03\x02\x02\x02[Y\x03\x02\x02\x02\\]\x03\x02"+
		"\x02\x02][\x03\x02\x02\x02]^\x03\x02\x02\x02^\x16\x03\x02\x02\x02_`\x07"+
		"1\x02\x02`a\x071\x02\x02ae\x03\x02\x02\x02bd\n\x03\x02\x02cb\x03\x02\x02"+
		"\x02dg\x03\x02\x02\x02ec\x03\x02\x02\x02ef\x03\x02\x02\x02fh\x03\x02\x02"+
		"\x02ge\x03\x02\x02\x02hi\b\f\x02\x02i\x18\x03\x02\x02\x02jk\x071\x02\x02"+
		"kl\x07,\x02\x02lp\x03\x02\x02\x02mo\v\x02\x02\x02nm\x03\x02\x02\x02or"+
		"\x03\x02\x02\x02pq\x03\x02\x02\x02pn\x03\x02\x02\x02qs\x03\x02\x02\x02"+
		"rp\x03\x02\x02\x02st\x07,\x02\x02tu\x071\x02\x02uv\x03\x02\x02\x02vw\b"+
		"\r\x02\x02w\x1A\x03\x02\x02\x02x{\x053\x1A\x02y{\x051\x19\x02zx\x03\x02"+
		"\x02\x02zy\x03\x02\x02\x02{\x1C\x03\x02\x02\x02|}\x07p\x02\x02}~\x07w"+
		"\x02\x02~\x7F\x07n\x02\x02\x7F\x80\x07n\x02\x02\x80\x1E\x03\x02\x02\x02"+
		"\x81\x82\x07v\x02\x02\x82\x83\x07t\x02\x02\x83\x84\x07w\x02\x02\x84\x8B"+
		"\x07g\x02\x02\x85\x86\x07h\x02\x02\x86\x87\x07c\x02\x02\x87\x88\x07n\x02"+
		"\x02\x88\x89\x07u\x02\x02\x89\x8B\x07g\x02\x02\x8A\x81\x03\x02\x02\x02"+
		"\x8A\x85\x03\x02\x02\x02\x8B \x03\x02\x02\x02\x8C\x8E\x07/\x02\x02\x8D"+
		"\x8C\x03\x02\x02\x02\x8D\x8E\x03\x02\x02\x02\x8E\x8F\x03\x02\x02\x02\x8F"+
		"\x90\x05%\x13\x02\x90\"\x03\x02\x02\x02\x91\x92\t\x04\x02\x02\x92$\x03"+
		"\x02\x02\x02\x93\x94\x057\x1C\x02\x94\x96\x070\x02\x02\x95\x97\x05;\x1E"+
		"\x02\x96\x95\x03\x02\x02\x02\x97\x98\x03\x02\x02\x02\x98\x96\x03\x02\x02"+
		"\x02\x98\x99\x03\x02\x02\x02\x99\x9B\x03\x02\x02\x02\x9A\x9C\x059\x1D"+
		"\x02\x9B\x9A\x03\x02\x02\x02\x9B\x9C\x03\x02\x02\x02\x9C\xAB\x03\x02\x02"+
		"\x02\x9D\x9F\x070\x02\x02\x9E\xA0\x05;\x1E\x02\x9F\x9E\x03\x02\x02\x02"+
		"\xA0\xA1\x03\x02\x02\x02\xA1\x9F\x03\x02\x02\x02\xA1\xA2\x03\x02\x02\x02"+
		"\xA2\xA4\x03\x02\x02\x02\xA3\xA5\x059\x1D\x02\xA4\xA3\x03\x02\x02\x02"+
		"\xA4\xA5\x03\x02\x02\x02\xA5\xAB\x03\x02\x02\x02\xA6\xA8\x057\x1C\x02"+
		"\xA7\xA9\x059\x1D\x02\xA8\xA7\x03\x02\x02\x02\xA8\xA9\x03\x02\x02\x02"+
		"\xA9\xAB\x03\x02\x02\x02\xAA\x93\x03\x02\x02\x02\xAA\x9D\x03\x02\x02\x02"+
		"\xAA\xA6\x03\x02\x02\x02\xAB&\x03\x02\x02\x02\xAC\xAD\t\x03\x02\x02\xAD"+
		"\xAE\x03\x02\x02\x02\xAE\xAF\b\x14\x02\x02\xAF(\x03\x02\x02\x02\xB0\xB1"+
		"\x07=\x02\x02\xB1*\x03\x02\x02\x02\xB2\xB3\x070\x02\x02\xB3,\x03\x02\x02"+
		"\x02\xB4\xB5\x07f\x02\x02\xB5\xB6\x07d\x02\x02\xB6.\x03\x02\x02\x02\xB7"+
		"\xBA\n\x05\x02\x02\xB8\xBA\x055\x1B\x02\xB9\xB7\x03\x02\x02\x02\xB9\xB8"+
		"\x03\x02\x02\x02\xBA\xBB\x03\x02\x02\x02\xBB\xB9\x03\x02\x02\x02\xBB\xBC"+
		"\x03\x02\x02\x02\xBC\xBD\x03\x02\x02\x02\xBD\xBE\x06\x18\x02\x02\xBE0"+
		"\x03\x02\x02\x02\xBF\xC4\x07$\x02\x02\xC0\xC3\n\x06\x02\x02\xC1\xC3\x05"+
		"5\x1B\x02\xC2\xC0\x03\x02\x02\x02\xC2\xC1\x03\x02\x02\x02\xC3\xC6\x03"+
		"\x02\x02\x02\xC4\xC2\x03\x02\x02\x02\xC4\xC5\x03\x02\x02\x02\xC5\xC7\x03"+
		"\x02\x02\x02\xC6\xC4\x03\x02\x02\x02\xC7\xC8\x07$\x02\x02\xC82\x03\x02"+
		"\x02\x02\xC9\xCE\x07)\x02\x02\xCA\xCD\n\x07\x02\x02\xCB\xCD\x055\x1B\x02"+
		"\xCC\xCA\x03\x02\x02\x02\xCC\xCB\x03\x02\x02\x02\xCD\xD0\x03\x02\x02\x02"+
		"\xCE\xCC\x03\x02\x02\x02\xCE\xCF\x03\x02\x02\x02\xCF\xD1\x03\x02\x02\x02"+
		"\xD0\xCE\x03\x02\x02\x02\xD1\xD2\x07)\x02\x02\xD24\x03\x02\x02\x02\xD3"+
		"\xD4\x07^\x02\x02\xD4\xD5\t\b\x02\x02\xD56\x03\x02\x02\x02\xD6\xDF\x07"+
		"2\x02\x02\xD7\xDB\t\t\x02\x02\xD8\xDA\x05;\x1E\x02\xD9\xD8\x03\x02\x02"+
		"\x02\xDA\xDD\x03\x02\x02\x02\xDB\xD9\x03\x02\x02\x02\xDB\xDC\x03\x02\x02"+
		"\x02\xDC\xDF\x03\x02\x02\x02\xDD\xDB\x03\x02\x02\x02\xDE\xD6\x03\x02\x02"+
		"\x02\xDE\xD7\x03\x02\x02\x02\xDF8\x03\x02\x02\x02\xE0\xE2\t\n\x02\x02"+
		"\xE1\xE3\t\v\x02\x02\xE2\xE1\x03\x02\x02\x02\xE2\xE3\x03\x02\x02\x02\xE3"+
		"\xE5\x03\x02\x02\x02\xE4\xE6\x05;\x1E\x02\xE5\xE4\x03\x02\x02\x02\xE6"+
		"\xE7\x03\x02\x02\x02\xE7\xE5\x03\x02\x02\x02\xE7\xE8\x03\x02\x02\x02\xE8"+
		":\x03\x02\x02\x02\xE9\xEA\t\f\x02\x02\xEA<\x03\x02\x02\x02\xEB\xEC\t\r"+
		"\x02\x02\xEC\xED\x03\x02\x02\x02\xED\xEE\b\x1F\x03\x02\xEE>\x03\x02\x02"+
		"\x02\x1B\x02U[]epz\x8A\x8D\x98\x9B\xA1\xA4\xA8\xAA\xB9\xBB\xC2\xC4\xCC"+
		"\xCE\xDB\xDE\xE2\xE7\x04\x02\x03\x02\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!mongoLexer.__ATN) {
			mongoLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(mongoLexer._serializedATN));
		}

		return mongoLexer.__ATN;
	}

}

