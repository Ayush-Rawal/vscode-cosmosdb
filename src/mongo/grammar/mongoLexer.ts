// Generated from ./grammar/mongo.g4 by ANTLR 4.6-SNAPSHOT


/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

 /*tslint:disable */


import { ATN } from 'antlr4ts/atn/ATN';
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer';
import { CharStream } from 'antlr4ts/CharStream';
import { Lexer } from 'antlr4ts/Lexer';
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator';
import { NotNull } from 'antlr4ts/Decorators';
import { Override } from 'antlr4ts/Decorators';
import { RuleContext } from 'antlr4ts/RuleContext';
import { Vocabulary } from 'antlr4ts/Vocabulary';
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl';

import * as Utils from 'antlr4ts/misc/Utils';


export class mongoLexer extends Lexer {
	public static readonly T__0=1;
	public static readonly T__1=2;
	public static readonly T__2=3;
	public static readonly T__3=4;
	public static readonly T__4=5;
	public static readonly T__5=6;
	public static readonly T__6=7;
	public static readonly T__7=8;
	public static readonly RegexLiteral=9;
	public static readonly RegexPattern=10;
	public static readonly SingleLineComment=11;
	public static readonly MultiLineComment=12;
	public static readonly StringLiteral=13;
	public static readonly NullLiteral=14;
	public static readonly BooleanLiteral=15;
	public static readonly NumericLiteral=16;
	public static readonly DecimalLiteral=17;
	public static readonly LineTerminator=18;
	public static readonly SEMICOLON=19;
	public static readonly DOT=20;
	public static readonly DB=21;
	public static readonly IDENTIFIER=22;
	public static readonly DOUBLE_QUOTED_STRING_LITERAL=23;
	public static readonly SINGLE_QUOTED_STRING_LITERAL=24;
	public static readonly WHITESPACE=25;
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE"
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "RegexLiteral", 
		"RegexPattern", "RegexFlag", "SingleLineComment", "MultiLineComment", 
		"StringLiteral", "NullLiteral", "BooleanLiteral", "NumericLiteral", "DecimalLiteral", 
		"LineTerminator", "SEMICOLON", "DOT", "DB", "IDENTIFIER", "DOUBLE_QUOTED_STRING_LITERAL", 
		"SINGLE_QUOTED_STRING_LITERAL", "STRING_ESCAPE", "DecimalIntegerLiteral", 
		"ExponentPart", "DecimalDigit", "WHITESPACE"
	];

	private static readonly _LITERAL_NAMES: (string | undefined)[] = [
		undefined, "'('", "','", "')'", "'{'", "'}'", "'['", "']'", "':'", undefined, 
		undefined, undefined, undefined, undefined, "'null'", undefined, undefined, 
		undefined, undefined, "';'", "'.'", "'db'"
	];
	private static readonly _SYMBOLIC_NAMES: (string | undefined)[] = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, "RegexLiteral", "RegexPattern", "SingleLineComment", 
		"MultiLineComment", "StringLiteral", "NullLiteral", "BooleanLiteral", 
		"NumericLiteral", "DecimalLiteral", "LineTerminator", "SEMICOLON", "DOT", 
		"DB", "IDENTIFIER", "DOUBLE_QUOTED_STRING_LITERAL", "SINGLE_QUOTED_STRING_LITERAL", 
		"WHITESPACE"
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(mongoLexer._LITERAL_NAMES, mongoLexer._SYMBOLIC_NAMES, []);

	@Override
	@NotNull
	public get vocabulary(): Vocabulary {
		return mongoLexer.VOCABULARY;
	}


		private isExternalIdentifierText(text) {
			return text === 'db';
		}


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(mongoLexer._ATN, this);
	}

	@Override
	public get grammarFileName(): string { return "mongo.g4"; }

	@Override
	public get ruleNames(): string[] { return mongoLexer.ruleNames; }

	@Override
	public get serializedATN(): string { return mongoLexer._serializedATN; }

	@Override
	public get modeNames(): string[] { return mongoLexer.modeNames; }

	@Override
	public sempred(_localctx: RuleContext, ruleIndex: number, predIndex: number): boolean {
		switch (ruleIndex) {
		case 22:
			return this.IDENTIFIER_sempred(_localctx, predIndex);
		}
		return true;
	}
	private IDENTIFIER_sempred(_localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
		case 0:
			return !this.isExternalIdentifierText(this.text)
				;
		}
		return true;
	}

	public static readonly _serializedATN: string =
		"\x03\uAF6F\u8320\u479D\uB75C\u4880\u1605\u191C\uAB37\x02\x1B\xF0\b\x01"+
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06"+
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r"+
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t"+
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t"+
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t"+
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x03\x02\x03\x02\x03\x03"+
		"\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07"+
		"\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x07\nR\n\n\f\n\x0E\nU\v\n\x03\v\x03"+
		"\v\x03\v\x03\v\x06\v[\n\v\r\v\x0E\v\\\x03\v\x03\v\x03\f\x03\f\x03\r\x03"+
		"\r\x03\r\x03\r\x07\rg\n\r\f\r\x0E\rj\v\r\x03\r\x03\r\x03\x0E\x03\x0E\x03"+
		"\x0E\x03\x0E\x07\x0Er\n\x0E\f\x0E\x0E\x0Eu\v\x0E\x03\x0E\x03\x0E\x03\x0E"+
		"\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x05\x0F~\n\x0F\x03\x10\x03\x10\x03\x10"+
		"\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11"+
		"\x03\x11\x03\x11\x05\x11\x8E\n\x11\x03\x12\x05\x12\x91\n\x12\x03\x12\x03"+
		"\x12\x03\x13\x03\x13\x03\x13\x06\x13\x98\n\x13\r\x13\x0E\x13\x99\x03\x13"+
		"\x05\x13\x9D\n\x13\x03\x13\x03\x13\x06\x13\xA1\n\x13\r\x13\x0E\x13\xA2"+
		"\x03\x13\x05\x13\xA6\n\x13\x03\x13\x03\x13\x05\x13\xAA\n\x13\x05\x13\xAC"+
		"\n\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16"+
		"\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x06\x18\xBB\n\x18\r\x18\x0E\x18"+
		"\xBC\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x07\x19\xC4\n\x19\f\x19\x0E"+
		"\x19\xC7\v\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x07\x1A\xCE\n\x1A"+
		"\f\x1A\x0E\x1A\xD1\v\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1C"+
		"\x03\x1C\x03\x1C\x07\x1C\xDB\n\x1C\f\x1C\x0E\x1C\xDE\v\x1C\x05\x1C\xE0"+
		"\n\x1C\x03\x1D\x03\x1D\x05\x1D\xE4\n\x1D\x03\x1D\x06\x1D\xE7\n\x1D\r\x1D"+
		"\x0E\x1D\xE8\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03s\x02"+
		"\x02 \x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b"+
		"\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\x02\x19\x02\r\x1B\x02"+
		"\x0E\x1D\x02\x0F\x1F\x02\x10!\x02\x11#\x02\x12%\x02\x13\'\x02\x14)\x02"+
		"\x15+\x02\x16-\x02\x17/\x02\x181\x02\x193\x02\x1A5\x02\x027\x02\x029\x02"+
		"\x02;\x02\x02=\x02\x1B\x03\x02\x0E\x03\x0211\x07\x02iikkooww{{\x05\x02"+
		"\f\f\x0F\x0F\u202A\u202B\f\x02\v\f\x0F\x0F\"\"$$)+.0<=]_}}\x7F\x7F\x04"+
		"\x02$$^^\x04\x02))^^\x05\x02$$))^^\x03\x023;\x04\x02GGgg\x04\x02--//\x03"+
		"\x022;\x04\x02\v\v\"\"\u0103\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02"+
		"\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02"+
		"\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02"+
		"\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02"+
		"\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02"+
		"\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'"+
		"\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02"+
		"\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02"+
		"\x02=\x03\x02\x02\x02\x03?\x03\x02\x02\x02\x05A\x03\x02\x02\x02\x07C\x03"+
		"\x02\x02\x02\tE\x03\x02\x02\x02\vG\x03\x02\x02\x02\rI\x03\x02\x02\x02"+
		"\x0FK\x03\x02\x02\x02\x11M\x03\x02\x02\x02\x13O\x03\x02\x02\x02\x15V\x03"+
		"\x02\x02\x02\x17`\x03\x02\x02\x02\x19b\x03\x02\x02\x02\x1Bm\x03\x02\x02"+
		"\x02\x1D}\x03\x02\x02\x02\x1F\x7F\x03\x02\x02\x02!\x8D\x03\x02\x02\x02"+
		"#\x90\x03\x02\x02\x02%\xAB\x03\x02\x02\x02\'\xAD\x03\x02\x02\x02)\xB1"+
		"\x03\x02\x02\x02+\xB3\x03\x02\x02\x02-\xB5\x03\x02\x02\x02/\xBA\x03\x02"+
		"\x02\x021\xC0\x03\x02\x02\x023\xCA\x03\x02\x02\x025\xD4\x03\x02\x02\x02"+
		"7\xDF\x03\x02\x02\x029\xE1\x03\x02\x02\x02;\xEA\x03\x02\x02\x02=\xEC\x03"+
		"\x02\x02\x02?@\x07*\x02\x02@\x04\x03\x02\x02\x02AB\x07.\x02\x02B\x06\x03"+
		"\x02\x02\x02CD\x07+\x02\x02D\b\x03\x02\x02\x02EF\x07}\x02\x02F\n\x03\x02"+
		"\x02\x02GH\x07\x7F\x02\x02H\f\x03\x02\x02\x02IJ\x07]\x02\x02J\x0E\x03"+
		"\x02\x02\x02KL\x07_\x02\x02L\x10\x03\x02\x02\x02MN\x07<\x02\x02N\x12\x03"+
		"\x02\x02\x02OS\x05\x15\v\x02PR\x05\x17\f\x02QP\x03\x02\x02\x02RU\x03\x02"+
		"\x02\x02SQ\x03\x02\x02\x02ST\x03\x02\x02\x02T\x14\x03\x02\x02\x02US\x03"+
		"\x02\x02\x02VZ\x071\x02\x02W[\n\x02\x02\x02XY\x07^\x02\x02Y[\x071\x02"+
		"\x02ZW\x03\x02\x02\x02ZX\x03\x02\x02\x02[\\\x03\x02\x02\x02\\Z\x03\x02"+
		"\x02\x02\\]\x03\x02\x02\x02]^\x03\x02\x02\x02^_\x071\x02\x02_\x16\x03"+
		"\x02\x02\x02`a\t\x03\x02\x02a\x18\x03\x02\x02\x02bc\x071\x02\x02cd\x07"+
		"1\x02\x02dh\x03\x02\x02\x02eg\n\x04\x02\x02fe\x03\x02\x02\x02gj\x03\x02"+
		"\x02\x02hf\x03\x02\x02\x02hi\x03\x02\x02\x02ik\x03\x02\x02\x02jh\x03\x02"+
		"\x02\x02kl\b\r\x02\x02l\x1A\x03\x02\x02\x02mn\x071\x02\x02no\x07,\x02"+
		"\x02os\x03\x02\x02\x02pr\v\x02\x02\x02qp\x03\x02\x02\x02ru\x03\x02\x02"+
		"\x02st\x03\x02\x02\x02sq\x03\x02\x02\x02tv\x03\x02\x02\x02us\x03\x02\x02"+
		"\x02vw\x07,\x02\x02wx\x071\x02\x02xy\x03\x02\x02\x02yz\b\x0E\x02\x02z"+
		"\x1C\x03\x02\x02\x02{~\x053\x1A\x02|~\x051\x19\x02}{\x03\x02\x02\x02}"+
		"|\x03\x02\x02\x02~\x1E\x03\x02\x02\x02\x7F\x80\x07p\x02\x02\x80\x81\x07"+
		"w\x02\x02\x81\x82\x07n\x02\x02\x82\x83\x07n\x02\x02\x83 \x03\x02\x02\x02"+
		"\x84\x85\x07v\x02\x02\x85\x86\x07t\x02\x02\x86\x87\x07w\x02\x02\x87\x8E"+
		"\x07g\x02\x02\x88\x89\x07h\x02\x02\x89\x8A\x07c\x02\x02\x8A\x8B\x07n\x02"+
		"\x02\x8B\x8C\x07u\x02\x02\x8C\x8E\x07g\x02\x02\x8D\x84\x03\x02\x02\x02"+
		"\x8D\x88\x03\x02\x02\x02\x8E\"\x03\x02\x02\x02\x8F\x91\x07/\x02\x02\x90"+
		"\x8F\x03\x02\x02\x02\x90\x91\x03\x02\x02\x02\x91\x92\x03\x02\x02\x02\x92"+
		"\x93\x05%\x13\x02\x93$\x03\x02\x02\x02\x94\x95\x057\x1C\x02\x95\x97\x07"+
		"0\x02\x02\x96\x98\x05;\x1E\x02\x97\x96\x03\x02\x02\x02\x98\x99\x03\x02"+
		"\x02\x02\x99\x97\x03\x02\x02\x02\x99\x9A\x03\x02\x02\x02\x9A\x9C\x03\x02"+
		"\x02\x02\x9B\x9D\x059\x1D\x02\x9C\x9B\x03\x02\x02\x02\x9C\x9D\x03\x02"+
		"\x02\x02\x9D\xAC\x03\x02\x02\x02\x9E\xA0\x070\x02\x02\x9F\xA1\x05;\x1E"+
		"\x02\xA0\x9F\x03\x02\x02\x02\xA1\xA2\x03\x02\x02\x02\xA2\xA0\x03\x02\x02"+
		"\x02\xA2\xA3\x03\x02\x02\x02\xA3\xA5\x03\x02\x02\x02\xA4\xA6\x059\x1D"+
		"\x02\xA5\xA4\x03\x02\x02\x02\xA5\xA6\x03\x02\x02\x02\xA6\xAC\x03\x02\x02"+
		"\x02\xA7\xA9\x057\x1C\x02\xA8\xAA\x059\x1D\x02\xA9\xA8\x03\x02\x02\x02"+
		"\xA9\xAA\x03\x02\x02\x02\xAA\xAC\x03\x02\x02\x02\xAB\x94\x03\x02\x02\x02"+
		"\xAB\x9E\x03\x02\x02\x02\xAB\xA7\x03\x02\x02\x02\xAC&\x03\x02\x02\x02"+
		"\xAD\xAE\t\x04\x02\x02\xAE\xAF\x03\x02\x02\x02\xAF\xB0\b\x14\x02\x02\xB0"+
		"(\x03\x02\x02\x02\xB1\xB2\x07=\x02\x02\xB2*\x03\x02\x02\x02\xB3\xB4\x07"+
		"0\x02\x02\xB4,\x03\x02\x02\x02\xB5\xB6\x07f\x02\x02\xB6\xB7\x07d\x02\x02"+
		"\xB7.\x03\x02\x02\x02\xB8\xBB\n\x05\x02\x02\xB9\xBB\x055\x1B\x02\xBA\xB8"+
		"\x03\x02\x02\x02\xBA\xB9\x03\x02\x02\x02\xBB\xBC\x03\x02\x02\x02\xBC\xBA"+
		"\x03\x02\x02\x02\xBC\xBD\x03\x02\x02\x02\xBD\xBE\x03\x02\x02\x02\xBE\xBF"+
		"\x06\x18\x02\x02\xBF0\x03\x02\x02\x02\xC0\xC5\x07$\x02\x02\xC1\xC4\n\x06"+
		"\x02\x02\xC2\xC4\x055\x1B\x02\xC3\xC1\x03\x02\x02\x02\xC3\xC2\x03\x02"+
		"\x02\x02\xC4\xC7\x03\x02\x02\x02\xC5\xC3\x03\x02\x02\x02\xC5\xC6\x03\x02"+
		"\x02\x02\xC6\xC8\x03\x02\x02\x02\xC7\xC5\x03\x02\x02\x02\xC8\xC9\x07$"+
		"\x02\x02\xC92\x03\x02\x02\x02\xCA\xCF\x07)\x02\x02\xCB\xCE\n\x07\x02\x02"+
		"\xCC\xCE\x055\x1B\x02\xCD\xCB\x03\x02\x02\x02\xCD\xCC\x03\x02\x02\x02"+
		"\xCE\xD1\x03\x02\x02\x02\xCF\xCD\x03\x02\x02\x02\xCF\xD0\x03\x02\x02\x02"+
		"\xD0\xD2\x03\x02\x02\x02\xD1\xCF\x03\x02\x02\x02\xD2\xD3\x07)\x02\x02"+
		"\xD34\x03\x02\x02\x02\xD4\xD5\x07^\x02\x02\xD5\xD6\t\b\x02\x02\xD66\x03"+
		"\x02\x02\x02\xD7\xE0\x072\x02\x02\xD8\xDC\t\t\x02\x02\xD9\xDB\x05;\x1E"+
		"\x02\xDA\xD9\x03\x02\x02\x02\xDB\xDE\x03\x02\x02\x02\xDC\xDA\x03\x02\x02"+
		"\x02\xDC\xDD\x03\x02\x02\x02\xDD\xE0\x03\x02\x02\x02\xDE\xDC\x03\x02\x02"+
		"\x02\xDF\xD7\x03\x02\x02\x02\xDF\xD8\x03\x02\x02\x02\xE08\x03\x02\x02"+
		"\x02\xE1\xE3\t\n\x02\x02\xE2\xE4\t\v\x02\x02\xE3\xE2\x03\x02\x02\x02\xE3"+
		"\xE4\x03\x02\x02\x02\xE4\xE6\x03\x02\x02\x02\xE5\xE7\x05;\x1E\x02\xE6"+
		"\xE5\x03\x02\x02\x02\xE7\xE8\x03\x02\x02\x02\xE8\xE6\x03\x02\x02\x02\xE8"+
		"\xE9\x03\x02\x02\x02\xE9:\x03\x02\x02\x02\xEA\xEB\t\f\x02\x02\xEB<\x03"+
		"\x02\x02\x02\xEC\xED\t\r\x02\x02\xED\xEE\x03\x02\x02\x02\xEE\xEF\b\x1F"+
		"\x03\x02\xEF>\x03\x02\x02\x02\x1B\x02SZ\\hs}\x8D\x90\x99\x9C\xA2\xA5\xA9"+
		"\xAB\xBA\xBC\xC3\xC5\xCD\xCF\xDC\xDF\xE3\xE8\x04\x02\x03\x02\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!mongoLexer.__ATN) {
			mongoLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(mongoLexer._serializedATN));
		}

		return mongoLexer.__ATN;
	}

}

